name: Release backend
on:
  push:
    branches:
      - main
    paths:
      - backend/worker/**

env:
  PROJECT_ID: dreambook-713
  CLOUD_BUILD_BUCKET: dreambook-713-cloud-build
  BUILD_REGION: europe-west1 # Not possible in europe-west4 https://cloud.google.com/build/docs/locations#restricted_regions_for_some_projects

permissions:
  id-token: write # Make GitHub populate environment variables for OIDC with GCP
  contents: write # Get access to  repository

jobs:
  build_deploy_backend:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - id: auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: "projects/14923174484/locations/global/workloadIdentityPools/dreambook-pool/providers/dreambook-gh-provider"
          service_account: "${{ secrets.RUN_SA_EMAIL }}"

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Build and push image to Google Container Registry
      - name: Build
        working-directory: ./backend/worker
        run: |-
          gcloud builds submit \
            --quiet \
            --gcs-log-dir="gs://$CLOUD_BUILD_BUCKET/logs" \
            --gcs-source-staging-dir="gs://$CLOUD_BUILD_BUCKET/stage" \
            --project="$PROJECT_ID" \
            --config="./cloudbuild.yaml" \
            --substitutions=COMMIT_SHA="$GITHUB_SHA" \
            --region="$BUILD_REGION"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./backend/terraform
        shell: bash

      # TODO: Don't duplicate worker image url
      - name: Terraform Apply
        id: apply
        run: |-
          terraform apply -input=false -auto-approve -var="worker_image_tag=$GITHUB_SHA" -var="worker_image_uri=eu.gcr.io/$PROJECT_ID/dreambook:$GITHUB_SHA"
        working-directory: ./backend/terraform
        shell: bash
